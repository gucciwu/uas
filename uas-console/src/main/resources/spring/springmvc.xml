<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">                 
  	<mvc:annotation-driven>        
        <mvc:message-converters>    
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
                <property name="supportedMediaTypes">    
                    <list>                          
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value> 
                    </list>    
                </property>    
                <property name="objectMapper">    
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <!-- 处理responseBody 里面日期类型 -->    
                        <property name="dateFormat">    
                            <bean class="java.text.SimpleDateFormat">    
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />    
                            </bean>    
                        </property>   
                        <!-- 为null字段时不显示 -->  
                      <!--   <property name="serializationInclusion">  
                            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>  
                        </property>  -->  
                    </bean>    
                </property>    
            </bean>    
        </mvc:message-converters>    
	</mvc:annotation-driven> 
	
  	<!-- 自动扫描 用于处理spring的注解-->  
   <context:component-scan base-package="com.mszq.**.controller" />
    <!-- if you use annotation you must configure following setting -->
  <!--   <mvc:annotation-driven /> -->
  
        <!-- 
                                在spring中使用aop必须设置下面的属性，含义是：要被拦截的类使用cglib生成代理类，而不是默认的jdk动态代理生成代理类。
                                 这个配置跟当前文件中的context:component-scan元素一起，确定了context:component-scan中的类使用cglib，这样aop就可以拦截这些类的操作了
       -->
    <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>
		 
		
    
    <!-- don't handle the static resource -->
    <mvc:default-servlet-handler />
	
	<!-- 启用shrio 控制器授权注解拦截方式 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
          <property name="proxyTargetClass" value="true"/>
    </bean>
     
    <!-- configure the InternalResourceViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            id="internalResourceViewResolver">
        <!-- 前缀 ,这里可能存在问题，因为平台的页面和具体某个项目的页面文件不在同一个目录下，解决办法：设置返回的string为具体的路径-->
        <property name="prefix" value="/" />
        <!-- 后缀 -->
       <!--  <property name="suffix" value=".html" /> -->
    </bean>
    <!-- 上传文件大小限制在500M以内 -->
    <!-- <bean id="progressListener" class="com.mszq.pp.app.file.multipart.FileUploadProgressListener"></bean>
    <bean id="multipartResolver" class="com.mszq.pp.app.file.multipart.CustomMultipartResolver">
        <property name="maxUploadSize" value="524288000" />  
        <property name="defaultEncoding" value="UTF-8" /> 
    </bean>  -->
    <!--  <bean id="exceptionHandler" class="com.mszq.platform.base.exception.PlatformExceptionHandler"/> -->
</beans>